<?php declare(strict_types=1);

/**
 * Public Api v3
 * Build the best experience of digital signature through your own platform. Increase your conversion rates, leverage your data and reduce your costs with Yousign API.
 * PHP version 8.1
 *
 * The version of the OpenAPI document: 3.0
 * Contact: contact@yousign.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace OpenAPI\Server\Api;


interface UserApiInterface {


    /**
     * Operation deleteUsersUserId
     *
     * Delete a User
     * @param string $userId
     * @return \OpenAPI\Server\Model\NoContent204 | \OpenAPI\Server\Model\BadRequestResponse | \OpenAPI\Server\Model\UnauthorizedResponse | \OpenAPI\Server\Model\ForbiddenResponse | \OpenAPI\Server\Model\NotFoundResponse | \OpenAPI\Server\Model\MethodNotAllowed | \OpenAPI\Server\Model\TooManyRequestsResponse | \OpenAPI\Server\Model\InternalServerError
     */
    public function deleteUsersUserId(
            string $userId,
    ):
        \OpenAPI\Server\Model\NoContent204 | 
        \OpenAPI\Server\Model\BadRequestResponse | 
        \OpenAPI\Server\Model\UnauthorizedResponse | 
        \OpenAPI\Server\Model\ForbiddenResponse | 
        \OpenAPI\Server\Model\NotFoundResponse | 
        \OpenAPI\Server\Model\MethodNotAllowed | 
        \OpenAPI\Server\Model\TooManyRequestsResponse | 
        \OpenAPI\Server\Model\InternalServerError
    ;


    /**
     * Operation deleteWorkspaceWorkspaceIdUsersUserId
     *
     * Remove a user from a workspace
     * @param string $workspaceId
     * @param string $userId
     * @return \OpenAPI\Server\Model\NoContent204 | \OpenAPI\Server\Model\BadRequestResponse | \OpenAPI\Server\Model\UnauthorizedResponse | \OpenAPI\Server\Model\ForbiddenResponse | \OpenAPI\Server\Model\NotFoundResponse | \OpenAPI\Server\Model\MethodNotAllowed | \OpenAPI\Server\Model\TooManyRequestsResponse | \OpenAPI\Server\Model\InternalServerError
     */
    public function deleteWorkspaceWorkspaceIdUsersUserId(
            string $workspaceId,
            string $userId,
    ):
        \OpenAPI\Server\Model\NoContent204 | 
        \OpenAPI\Server\Model\BadRequestResponse | 
        \OpenAPI\Server\Model\UnauthorizedResponse | 
        \OpenAPI\Server\Model\ForbiddenResponse | 
        \OpenAPI\Server\Model\NotFoundResponse | 
        \OpenAPI\Server\Model\MethodNotAllowed | 
        \OpenAPI\Server\Model\TooManyRequestsResponse | 
        \OpenAPI\Server\Model\InternalServerError
    ;


    /**
     * Operation getUsers
     *
     * List Users
     * @param null | string $after
     * @param null | int $limit
     * @param null | object $email
     * @return \OpenAPI\Server\Model\GetUsers200Response | \OpenAPI\Server\Model\BadRequestResponse | \OpenAPI\Server\Model\UnauthorizedResponse | \OpenAPI\Server\Model\MethodNotAllowed | \OpenAPI\Server\Model\TooManyRequestsResponse | \OpenAPI\Server\Model\InternalServerError
     */
    public function getUsers(
            ?string $after,
            ?int $limit,
            ?object $email,
    ):
        \OpenAPI\Server\Model\GetUsers200Response | 
        \OpenAPI\Server\Model\BadRequestResponse | 
        \OpenAPI\Server\Model\UnauthorizedResponse | 
        \OpenAPI\Server\Model\MethodNotAllowed | 
        \OpenAPI\Server\Model\TooManyRequestsResponse | 
        \OpenAPI\Server\Model\InternalServerError
    ;


    /**
     * Operation getUsersUserId
     *
     * Get a User
     * @param string $userId
     * @return \OpenAPI\Server\Model\User | \OpenAPI\Server\Model\BadRequestResponse | \OpenAPI\Server\Model\UnauthorizedResponse | \OpenAPI\Server\Model\ForbiddenResponse | \OpenAPI\Server\Model\NotFoundResponse | \OpenAPI\Server\Model\MethodNotAllowed | \OpenAPI\Server\Model\TooManyRequestsResponse | \OpenAPI\Server\Model\InternalServerError
     */
    public function getUsersUserId(
            string $userId,
    ):
        \OpenAPI\Server\Model\User | 
        \OpenAPI\Server\Model\BadRequestResponse | 
        \OpenAPI\Server\Model\UnauthorizedResponse | 
        \OpenAPI\Server\Model\ForbiddenResponse | 
        \OpenAPI\Server\Model\NotFoundResponse | 
        \OpenAPI\Server\Model\MethodNotAllowed | 
        \OpenAPI\Server\Model\TooManyRequestsResponse | 
        \OpenAPI\Server\Model\InternalServerError
    ;


    /**
     * Operation patchUsersUserId
     *
     * Update a User
     * @param string $userId
     * @param null | \OpenAPI\Server\Model\UpdateUser $updateUser
     * @return \OpenAPI\Server\Model\User | \OpenAPI\Server\Model\BadRequestResponse | \OpenAPI\Server\Model\UnauthorizedResponse | \OpenAPI\Server\Model\ForbiddenResponse | \OpenAPI\Server\Model\NotFoundResponse | \OpenAPI\Server\Model\MethodNotAllowed | \OpenAPI\Server\Model\UnsupportedMediaTypeResponse | \OpenAPI\Server\Model\TooManyRequestsResponse | \OpenAPI\Server\Model\InternalServerError
     */
    public function patchUsersUserId(
            string $userId,
            ?\OpenAPI\Server\Model\UpdateUser $updateUser,
    ):
        \OpenAPI\Server\Model\User | 
        \OpenAPI\Server\Model\BadRequestResponse | 
        \OpenAPI\Server\Model\UnauthorizedResponse | 
        \OpenAPI\Server\Model\ForbiddenResponse | 
        \OpenAPI\Server\Model\NotFoundResponse | 
        \OpenAPI\Server\Model\MethodNotAllowed | 
        \OpenAPI\Server\Model\UnsupportedMediaTypeResponse | 
        \OpenAPI\Server\Model\TooManyRequestsResponse | 
        \OpenAPI\Server\Model\InternalServerError
    ;


    /**
     * Operation postUsers
     *
     * Create a new User
     * @param null | \OpenAPI\Server\Model\CreateUser $createUser
     * @return \OpenAPI\Server\Model\User | \OpenAPI\Server\Model\BadRequestResponse | \OpenAPI\Server\Model\UnauthorizedResponse | \OpenAPI\Server\Model\ForbiddenResponse | \OpenAPI\Server\Model\MethodNotAllowed | \OpenAPI\Server\Model\TooManyRequestsResponse | \OpenAPI\Server\Model\InternalServerError
     */
    public function postUsers(
            ?\OpenAPI\Server\Model\CreateUser $createUser,
    ):
        \OpenAPI\Server\Model\User | 
        \OpenAPI\Server\Model\BadRequestResponse | 
        \OpenAPI\Server\Model\UnauthorizedResponse | 
        \OpenAPI\Server\Model\ForbiddenResponse | 
        \OpenAPI\Server\Model\MethodNotAllowed | 
        \OpenAPI\Server\Model\TooManyRequestsResponse | 
        \OpenAPI\Server\Model\InternalServerError
    ;


    /**
     * Operation putWorkspacesWorkspaceIdUsers
     *
     * Associate a user to a workspace
     * @param string $workspaceId
     * @param string $userId
     * @return \OpenAPI\Server\Model\NoContent204 | \OpenAPI\Server\Model\BadRequestResponse | \OpenAPI\Server\Model\UnauthorizedResponse | \OpenAPI\Server\Model\ForbiddenResponse | \OpenAPI\Server\Model\NotFoundResponse | \OpenAPI\Server\Model\MethodNotAllowed | \OpenAPI\Server\Model\TooManyRequestsResponse | \OpenAPI\Server\Model\InternalServerError
     */
    public function putWorkspacesWorkspaceIdUsers(
            string $workspaceId,
            string $userId,
    ):
        \OpenAPI\Server\Model\NoContent204 | 
        \OpenAPI\Server\Model\BadRequestResponse | 
        \OpenAPI\Server\Model\UnauthorizedResponse | 
        \OpenAPI\Server\Model\ForbiddenResponse | 
        \OpenAPI\Server\Model\NotFoundResponse | 
        \OpenAPI\Server\Model\MethodNotAllowed | 
        \OpenAPI\Server\Model\TooManyRequestsResponse | 
        \OpenAPI\Server\Model\InternalServerError
    ;

}
